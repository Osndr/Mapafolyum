<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mapa Interactivo</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet.heat/dist/leaflet-heat.js"></script>
</head>
<body>
    <h1>Mapa Interactivo con Filtros Dinámicos</h1>
    <label for="filter1">Filtro 1:</label>
    <select id="filter1">
        <!-- Añade las opciones de filtro según las columnas de tu archivo DataB -->
        <option value="NombreColumna1">NombreColumna1</option>
        <option value="NombreColumna2">NombreColumna2</option>
        <!-- ... -->
    </select>

    <label for="filter2">Filtro 2:</label>
    <select id="filter2">
        <!-- Añade las opciones de filtro según las columnas de tu archivo DataB -->
        <option value="NombreColumna1">NombreColumna1</option>
        <option value="NombreColumna2">NombreColumna2</option>
        <!-- ... -->
    </select>

    <div id="map" style="width: 100%; height: 600px;"></div>
    <script>
        // Inicializar el mapa
        var map = L.map('map').setView([0, 0], 2);

        // Añadir capa base al mapa
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19
        }).addTo(map);

        // Cargar datos desde el archivo JSON
        fetch('data.json')
            .then(response => response.json())
            .then(data => {
                // Añadir marcadores con etiquetas
                data.forEach(item => {
                    L.marker([item.Latitud, item.Longitud])
                        .bindPopup(`Valor: ${item.valor}`)
                        .addTo(map);
                });

                // Añadir capa de calor
                var heatData = data.map(item => [item.Latitud, item.Longitud, item.valor]);
                L.heatLayer(heatData, {radius: 25}).addTo(map);
            });

        // Función para aplicar filtros
        function applyFilters() {
            var filter1 = document.getElementById('filter1').value;
            var filter2 = document.getElementById('filter2').value;

            // Lógica para aplicar los filtros seleccionados
            console.log(`Aplicando filtros: ${filter1}, ${filter2}`);
            // Implementa aquí la lógica para filtrar los datos y actualizar el mapa
        }

        // Añadir evento de cambio a los selectores de filtros
        document.getElementById('filter1').addEventListener('change', applyFilters);
        document.getElementById('filter2').addEventListener('change', applyFilters);
    </script>
</body>
</html>
